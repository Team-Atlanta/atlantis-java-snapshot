/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
    implementation 'commons-cli:commons-cli:1.9.0'
    implementation 'com.google.code.gson:gson:2.13.1'

    // Local jar dependency
    //implementation files('lib/jars/truffle-api.jar')
    //implementation files('lib/jars/espresso.jar')
    //implementation files('lib/jars/polyglot.jar')
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'executor.App'
    // applicationDefaultJvmArgs = ["-ea"]
}

jar {
  duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
  from {
      configurations.compileClasspath.filter{
          it.exists() }.collect {
              it.isDirectory() ? it : zipTree(it) }
  }
  manifest {
    attributes(
      'Main-Class': 'executor.App'
    )
  }

}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
