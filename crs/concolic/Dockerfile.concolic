FROM ghcr.io/blue9057/graal-deps:v1.0.0 AS graal_deps

FROM ubuntu:20.04 as espresso-dev
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y \
    curl \
    python3.9 \
    python3-pip \
    git \
    zip \
    wget \
    build-essential \
    libstdc++-9-dev

RUN rm /usr/bin/python3
RUN ln -s /usr/bin/python3.9 /usr/bin/python3

COPY graal-concolic/mx /mx

ENV PATH="$PATH:/mx"
RUN echo Y | mx fetch-jdk labsjdk-ce-21
RUN python3 -mpip install ninja_syntax

COPY graal-concolic/graal-jdk-25-14 /graal-jdk
WORKDIR /graal-jdk
RUN wget https://github.com/Kitware/CMake/releases/download/v3.31.6/cmake-3.31.6-linux-x86_64.tar.gz
RUN tar -xzvf cmake-3.31.6-linux-x86_64.tar.gz
RUN cp -r cmake-3.31.6-linux-x86_64/* /usr/
RUN rm -rf cmake-3.31.6-linux-x86_64

WORKDIR /graal-jdk

COPY graal-concolic/docker-scripts /docker-scripts
RUN chmod +x /docker-scripts

# put mx deps
COPY --from=graal_deps /root/.mx /root/.mx

ENV MODE="jvm-ce"
ENV PREPARE_CMD="pushd /graal-jdk/espresso && mx --env=$MODE build --targets LLVM_TOOLCHAIN && mx --env $MODE create-generated-sources"
RUN /docker-scripts/init_dev.sh /bin/bash -c "$PREPARE_CMD"
ENV BUILD_CMD="pushd /graal-jdk/espresso && export MX_BUILD_EXPLODED=$MX_BUILD_EXPLODED && mx --env $MODE create-generated-sources && mx --env $MODE build"
RUN /docker-scripts/init_dev.sh /bin/bash -c "$BUILD_CMD"

#ENTRYPOINT ["/docker-scripts/init_dev.sh"]
