#################################################################################
## CRS Installation - Base (Public)
#################################################################################
FROM ghcr.io/aixcc-finals/base-runner:v1.3.0

ENV USER=root \
    LC_ALL=C.UTF-8 \
    LANG=C.UTF-8 \
    TZ=America/New_York

# utility tools
RUN chmod 1777 /tmp && \
    export DEBIAN_FRONTEND=noninteractive && \
    apt-get clean && \
    apt-get update --fix-missing && \
    apt-get -y install --no-install-recommends \
        curl \
        sudo \
        gosu \
        autoconf \
        automake \
        autotools-dev \
        build-essential \
        git \
        git-lfs \
        lsof \
        unzip \
        make \
        software-properties-common \
        tzdata \
        vim \
        wget \
        htop \
        pigz \
        moreutils \
        flex \
        bison \
        libpam0g \
        libpam0g-dev \
        libtool \
        cmake \
        ripgrep \
        tzdata \
        libsystemd-dev  && \
    rm -rf /var/lib/apt/lists/*

# Python 3.12
RUN add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get -y install \
        python3.12 \
        python3.12-dev \
        python3.12-venv && \
    python3.12 -m venv /venv && \
    /venv/bin/pip3 install --upgrade pip setuptools wheel && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /root/.cache/pip
ENV PATH=/venv/bin:$PATH

## Java 17
ENV ARCHITECTURE=x64
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV JVM_LD_LIBRARY_PATH=$JAVA_HOME/lib/server
ENV PATH=$PATH:$JAVA_HOME/bin
RUN cd /tmp && \
    echo "Reinstalling full version Java 17 used by OSS-Fuzz" && \
    wget -q https://download.java.net/java/GA/jdk17.0.2/dfd4a8d0985749f896bed50d7138ee7f/8/GPL/openjdk-17.0.2_linux-"$ARCHITECTURE"_bin.tar.gz -O /tmp/openjdk-17.0.2_linux-"$ARCHITECTURE"_bin.tar.gz && \
    rm -rf $JAVA_HOME && \
    mkdir -p $JAVA_HOME && \
    tar -xz --strip-components=1 -f openjdk-17.0.2_linux-"$ARCHITECTURE"_bin.tar.gz --directory $JAVA_HOME && \
    rm -f openjdk-17.0.2_linux-"$ARCHITECTURE"_bin.tar.gz && \
    rm -f $JAVA_HOME/lib/src.zip

## Java 15
ENV JAVA_15_HOME=/usr/lib/jvm/java-15-openjdk-amd64
RUN cd /tmp && \
    echo "Reinstalling full version Java 15 used by OSS-Fuzz" && \
    wget -q https://download.java.net/java/GA/jdk15.0.2/0d1cfde4252546c6931946de8db48ee2/7/GPL/openjdk-15.0.2_linux-"$ARCHITECTURE"_bin.tar.gz -O /tmp/openjdk-15.0.2_linux-"$ARCHITECTURE"_bin.tar.gz && \
    rm -rf $JAVA_15_HOME && \
    mkdir -p $JAVA_15_HOME && \
    tar -xz --strip-components=1 -f openjdk-15.0.2_linux-"$ARCHITECTURE"_bin.tar.gz --directory $JAVA_15_HOME && \
    rm -f openjdk-15.0.2_linux-"$ARCHITECTURE"_bin.tar.gz && \
    rm -f $JAVA_15_HOME/lib/src.zip

## mvn 3.9.11
ENV PATH=$PATH:/apache-maven-3.9.11/bin
RUN cd / && \
    echo "Installing maven" && \
    curl -L -O https://dlcdn.apache.org/maven/maven-3/3.9.11/binaries/apache-maven-3.9.11-bin.tar.gz && \
    tar xzvf apache-maven-3.9.11-bin.tar.gz && \
    rm -f apache-maven-3.9.11-bin.tar.gz

## sbt 1.10.10
ENV SBT_VERSION=1.10.10
ENV SBT_HOME=/usr/local/sbt
ENV PATH=${PATH}:${SBT_HOME}/bin
RUN echo "Installing sbt" && \
    curl -sL "https://github.com/sbt/sbt/releases/download/v$SBT_VERSION/sbt-$SBT_VERSION.tgz" | gunzip | tar -x -C /usr/local

## gradle 8.8
ENV PATH=$PATH:/opt/gradle/gradle-8.8/bin
RUN echo "Installing gradle" && \
    mkdir /opt/gradle && \
    cd /opt/gradle && \
    curl -L -O https://services.gradle.org/distributions/gradle-8.8-bin.zip && \
    unzip gradle-8.8-bin.zip && \
    rm -f gradle-8.8-bin.zip

## z3
RUN cd /tmp && mkdir z3 && cd z3 \
    echo "Installing Z3" && \
    curl -L -O https://github.com/Z3Prover/z3/releases/download/z3-4.12.6/z3-4.12.6-x64-glibc-2.31.zip && \
    unzip z3-4.12.6-x64-glibc-2.31.zip && \
    cp z3-4.12.6-x64-glibc-2.31/bin/z3 /usr/bin/z3 && \
    cp -R z3-4.12.6-x64-glibc-2.31/include /usr && \
    cp z3-4.12.6-x64-glibc-2.31/bin/libz3.so /usr/lib/x86_64-linux-gnu/libz3.so && \
    cp z3-4.12.6-x64-glibc-2.31/bin/libz3.so /usr/lib/libz3.so && \
    cp z3-4.12.6-x64-glibc-2.31/bin/libz3.so /usr/lib/x86_64-linux-gnu/libz3.so.4 && \
    cp z3-4.12.6-x64-glibc-2.31/bin/libz3.so /usr/lib/libz3.so.4 && \
    cp z3-4.12.6-x64-glibc-2.31/bin/libz3java.so /usr/lib/libz3java.so && \
    cp z3-4.12.6-x64-glibc-2.31/bin/com.microsoft.z3.jar /usr/lib && \
    cd && rm -rf /tmp/z3

## libcgroup
RUN cd /tmp && mkdir libcgroup && cd libcgroup \
    echo "Install libcgroup" && \
    curl -L -O https://github.com/libcgroup/libcgroup/releases/download/v3.1.0/libcgroup-3.1.0.tar.gz && \
    tar xzf libcgroup-3.1.0.tar.gz && \
    cd libcgroup-3.1.0 && \
    ./configure && \
    make -j && \
    sudo make install && \
    cd && rm -rf /tmp/libcgroup
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib:/usr/local/lib/security

## nodejs & npm
RUN curl -fsSL https://nodejs.org/dist/v22.16.0/node-v22.16.0-linux-x64.tar.gz -o /tmp/nodejs.tar.gz && \
    tar -xzf /tmp/nodejs.tar.gz -C /usr/local --strip-components=1 && \
    rm /tmp/nodejs.tar.gz && \
    npm install -g npm@10.2.4

## protobuf
RUN curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v30.2/protoc-30.2-linux-x86_64.zip && \
    unzip protoc-30.2-linux-x86_64.zip -d /usr/local && \
    rm -f protoc-30.2-linux-x86_64.zip && \
    chmod +x /usr/local/bin/protoc

## rust
RUN curl https://sh.rustup.rs -sSf | bash -s -- --default-toolchain 1.87.0 -y
ENV PATH="/root/.cargo/bin:${PATH}"

## poetry
RUN curl -sSL https://install.python-poetry.org | /venv/bin/python - --version 2.1.3

## codeql
ENV CODEQL_VERSION=2.20.4
ENV CODEQL_HOME=/opt/codeql
RUN cd /tmp && \
    wget https://github.com/github/codeql-cli-binaries/releases/download/v${CODEQL_VERSION}/codeql-linux64.zip --no-check-certificate && \
    unzip codeql-linux64.zip && \
    mv codeql ${CODEQL_HOME} && \
    rm codeql-linux64.zip && \
    ln -s ${CODEQL_HOME}/codeql /usr/local/bin/codeql && \
    codeql pack download codeql/java-queries:codeql-java

## npm deps
RUN npm install -g npm@10.2.4 \
        @openai/codex \
        @anthropic-ai/claude-code \
